--- origsrc/MPlayer-1.2.1/configure	2016-01-08 06:39:01.000000000 -0600
+++ src/MPlayer-1.2.1/configure	2016-11-16 16:53:10.021040200 -0600
@@ -1778,6 +1778,10 @@ fi
 
 if win32 ; then
   _exesuf=".exe"
+  _pe_executable=yes
+fi
+
+if mingw32; then
   extra_cflags="$extra_cflags -fno-common"
   # -lwinmm is always needed for osdep/timer-win2.c
   timer_libs=-lwinmm
@@ -1786,9 +1790,6 @@ if win32 ; then
   _priority=yes
   def_dos_paths="#define HAVE_DOS_PATHS 1"
   def_priority="#define CONFIG_PRIORITY 1"
-fi
-
-if mingw32 ; then
   _getch=getch2-win.c
   shmem=yes
 fi
@@ -1905,7 +1906,7 @@ if test "$_runtime_cpudetection" = no ;
 
 # Cygwin has /proc/cpuinfo, but only supports Intel CPUs
 # FIXME: Remove the Cygwin check once AMD CPUs are supported
-if test -r /proc/cpuinfo && ! cygwin; then
+if test -r /proc/cpuinfo; then
   # Linux with /proc mounted, extract CPU information from it
   _cpuinfo="cat /proc/cpuinfo"
 elif test -r /compat/linux/proc/cpuinfo && ! x86 ; then
@@ -4925,7 +4926,7 @@ else
   novomodules="cvidix $novomodules"
 fi
 
-if test "$_vidix" = yes && win32; then
+if test "$_vidix" = yes && mingw32; then
   winvidix=yes
   vomodules="winvidix $vomodules"
   libs_mplayer="$libs_mplayer -lgdi32"
@@ -5494,7 +5495,7 @@ EOF
     _gl_egl_android=yes
     libs_mplayer="$libs_mplayer -lEGL $ld_dl"
   fi
-  if win32 && cc_check -DGL_WIN32 -lopengl32 ; then
+  if mingw32 && cc_check -DGL_WIN32 -lopengl32 ; then
     _gl=yes
     _gl_win32=yes
     libs_mplayer="$libs_mplayer -lopengl32 -lgdi32"
@@ -6084,8 +6085,8 @@ if test "$_vcd" = auto; then
   _vcd=no
   if linux || freebsd || netbsd || openbsd || dragonfly || bsdos || darwin || sunos || os2; then
     _vcd=yes
-  elif mingw32; then
-  header_check ddk/ntddcdrm.h && _vcd=yes
+  elif win32; then
+  header_check ntddcdrm.h && _vcd=yes
   fi
 fi
 if test "$_vcd" = yes; then
@@ -7826,7 +7827,7 @@ if test "$_gui" = yes ; then
   test "$_freetype" = no && test "$_bitmap_font" = no &&
     die "The GUI requires either FreeType or bitmap font support."
 
-  if ! win32 ; then
+  if ! mingw32 ; then
     _gui_gtk=yes
     test "$_x11" != yes && die "The GUI requires X11."
 
@@ -7851,7 +7852,7 @@ int main(void) {
   return exitvar;
 }
 EOF
-      cc_check -lXext && _xshape=yes
+      cc_check -lXext -lX11 && _xshape=yes
     fi
     if test "$_xshape" = yes ; then
       def_xshape='#define CONFIG_XSHAPE 1'
@@ -7899,11 +7900,11 @@ EOF
       die "GTK+ version 2 devel packages were not found (required for GUI)."
     fi
 
-  else #if ! win32
+  else #if ! mingw32
     _gui_win32=yes
     libs_mplayer="$libs_mplayer -lcomdlg32 -lcomctl32 -lshell32 -lkernel32"
     def_gui='#define CONFIG_GUI 1'
-  fi #if ! win32
+  fi #if ! mingw32
 
 else #if test "$_gui"
   def_gui='#undef CONFIG_GUI'
--- origsrc/MPlayer-1.2.1/libaf/af_ladspa.c	2011-10-26 10:12:35.000000000 -0500
+++ src/MPlayer-1.2.1/libaf/af_ladspa.c	2016-11-16 16:09:08.238800400 -0600
@@ -297,7 +297,7 @@ static void* mydlopen(const char *filena
     size_t filenamelen;
     void *result = NULL;
 
-#if defined(__MINGW32__) || defined(__CYGWIN__)
+#if defined(__MINGW32__)
     /* For Windows there's only absolute path support.
      * If you have a Windows machine, feel free to fix this.
      * (path separator, shared objects extension, et cetera). */
--- origsrc/MPlayer-1.2.1/libao2/ao_sdl.c	2012-02-17 18:08:30.000000000 -0600
+++ src/MPlayer-1.2.1/libao2/ao_sdl.c	2016-11-16 16:09:08.248803000 -0600
@@ -55,7 +55,7 @@ LIBAO_EXTERN(sdl)
 #undef USE_SDL_INTERNAL_MIXER
 
 // Samplesize used by the SDLlib AudioSpec struct
-#if defined(__MINGW32__) || defined(__CYGWIN__) || defined(__AMIGAOS4__)
+#if defined(__MINGW32__) || defined(__AMIGAOS4__)
 #define SAMPLESIZE 2048
 #else
 #define SAMPLESIZE 1024
--- origsrc/MPlayer-1.2.1/libmpcodecs/ad_mpg123.c	2013-10-25 14:59:57.000000000 -0500
+++ src/MPlayer-1.2.1/libmpcodecs/ad_mpg123.c	2016-11-16 16:09:08.263387200 -0600
@@ -46,6 +46,7 @@ LIBAD_EXTERN(mpg123)
  * principle, but is not supported.
  * So, please leave the check for MPG123_API_VERSION there, m-kay?
  */
+#define MPG123_NO_LARGENAME
 #include <mpg123.h>
 
 /* Enable faster mode of operation with newer libmpg123, avoiding
--- origsrc/MPlayer-1.2.1/libvo/video_out.c	2015-02-27 12:14:02.000000000 -0600
+++ src/MPlayer-1.2.1/libvo/video_out.c	2016-11-16 16:09:08.275897800 -0600
@@ -269,7 +269,7 @@ const vo_functions_t* const video_out_dr
 #ifdef CONFIG_X11
         &video_out_xvidix,
 #endif
-#if defined(__MINGW32__) || defined(__CYGWIN__)
+#if defined(__MINGW32__)
         &video_out_winvidix,
 #endif
         &video_out_cvidix,
--- origsrc/MPlayer-1.2.1/mpcommon.c	2014-02-02 13:18:31.000000000 -0600
+++ src/MPlayer-1.2.1/mpcommon.c	2016-11-16 16:09:08.288895100 -0600
@@ -539,7 +539,7 @@ err_out:
  */
 static void sanitize_os(void)
 {
-#if defined(__MINGW32__) || defined(__CYGWIN__)
+#if defined(__MINGW32__)
     HMODULE kernel32 = GetModuleHandle("Kernel32.dll");
     BOOL WINAPI (*setDEP)(DWORD) = NULL;
     BOOL WINAPI (*setDllDir)(LPCTSTR) = NULL;
--- origsrc/MPlayer-1.2.1/mplayer.c	2015-06-10 16:17:35.000000000 -0500
+++ src/MPlayer-1.2.1/mplayer.c	2016-11-16 16:09:08.307899200 -0600
@@ -33,7 +33,7 @@
 #include <sys/time.h>
 #include <sys/types.h>
 
-#if defined(__MINGW32__) || defined(__CYGWIN__)
+#if defined(__MINGW32__)
 #define _UWIN 1  /*disable Non-underscored versions of non-ANSI functions as otherwise int eof would conflict with eof()*/
 #include <windows.h>
 #endif
@@ -708,7 +708,7 @@ void exit_player_with_rc(enum exit_reaso
     if (mpctx->user_muted && !mpctx->edl_muted)
         mixer_mute(&mpctx->mixer);
     uninit_player(INITIALIZED_ALL);
-#if defined(__MINGW32__) || defined(__CYGWIN__)
+#if defined(__MINGW32__)
     timeEndPeriod(1);
 #endif
 #ifdef CONFIG_X11
@@ -1218,7 +1218,7 @@ static void print_status(float a_pos, fl
         width = screen_width;
     else
         width = 80;
-#if defined(__MINGW32__) || defined(__CYGWIN__) || defined(__OS2__)
+#if defined(__MINGW32__) || defined(__OS2__)
     /* Windows command line is broken (MinGW's rxvt works, but we
      * should not depend on that). */
     width--;
@@ -2826,7 +2826,7 @@ int main(int argc, char *argv[])
     filename = mpctx->playtree_iter ? play_tree_iter_get_file(mpctx->playtree_iter, 1) : NULL;
 
     print_version("MPlayer");
-#if (defined(__MINGW32__) || defined(__CYGWIN__)) && defined(CONFIG_GUI)
+#if defined(__MINGW32__) && defined(CONFIG_GUI)
     void *runningmplayer = FindWindow("MPlayer GUI for Windows", "MPlayer for Windows");
     if (runningmplayer && filename && use_gui) {
         COPYDATASTRUCT csData;
@@ -2849,7 +2849,7 @@ int main(int argc, char *argv[])
         use_gui = 0;
     }
 #else
-#if !defined(__MINGW32__) && !defined(__CYGWIN__)
+#if !defined(__MINGW32__)
     if (use_gui && !vo_init()) {
         mp_msg(MSGT_CPLAYER, MSGL_WARN, MSGTR_GuiNeedsX);
         use_gui = 0;
--- origsrc/MPlayer-1.2.1/stream/stream_cddb.c	2014-04-06 13:48:45.000000000 -0500
+++ src/MPlayer-1.2.1/stream/stream_cddb.c	2016-11-16 16:09:18.129165400 -0600
@@ -60,7 +60,7 @@
 #elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__) || defined(__OpenBSD__) || defined(__DragonFly__)
 #include <sys/cdio.h>
 #elif defined(__MINGW32__) || defined(__CYGWIN__)
-#include <ddk/ntddcdrm.h>
+#include <ntddcdrm.h>
 #elif defined(__bsdi__)
 #include <dvd.h>
 #elif defined(__APPLE__) || defined(__DARWIN__)
--- origsrc/MPlayer-1.2.1/stream/stream_vcd.c	2015-12-29 12:21:40.000000000 -0600
+++ src/MPlayer-1.2.1/stream/stream_vcd.c	2016-11-16 16:09:08.317405800 -0600
@@ -170,7 +170,7 @@ static int open_s(stream_t *stream,int m
       p->device = strdup(DEFAULT_CDROM_DEVICE);
   }
 
-#if defined(__MINGW32__) || defined(__CYGWIN__)
+#if defined(__MINGW32__)
   device[4] = p->device[0];
   /* open() can't be used for devices so do it the complicated way */
   hd = CreateFile(device, GENERIC_READ, FILE_SHARE_READ, NULL,
